默认方法
{
    什么是默认方法
    如何以一种兼容的方式改进API
    默认方法的使用模式
    解析规则
}

接口设计存在的问题：现存的实现类不在接口设计者的控制范围内，为了解决这个问题Java8引入了一种新的机制：接口支持在声明方法的同时提供实现。通过两种
方式可以完成这种操作：其一，Java8允许在接口内声明静态方法。其二，Java8引入了一个新功能，叫默认方法，通过默认方法指定接口方法的默认实现。

*不同类型的兼容性：二进制、源代码和函数行为
    变更对Java程序的影响可以分为三种类型的兼容性：二进制级的兼容、源代码级的兼容、函数行为的兼容。
    二进制级的兼容性表示现有的二进制执行文件能无缝持续链接（包括验证、准本和解析）和运行。比如，为接口添加一个方法就是二进制级的兼容，这种方式
    下，如果新添加的方法不被调用，接口已经实现的方法可以继续运行
    源代码级的兼容性表示引入变化之后，现有的程序依然能成功编通过，比如，向接口添加新的方法就不是源码级的兼容，遗留代码没有引入新的方法，编译不通过
    函数行为的兼容性，表示变更发生之后，程序接受同样的输入能得到同样的结果。比如，为接口添加新的方法，因为新添加的方法在程序中并未被调用


*解决冲突规则
    三条规则：
    1.类种的方法优先级最高。类或父类中声明的方法优先级高于任何声明为默认方法的优先级
    2.如果依据1无法判断，那么自接口的优先级更高：函数签名相同，优先选择拥有最具体实现的默认方法接口，即如果B继承了A，那么B就比A更具体
    3.如果还是无法判读，继承了多个接口的类必须通过显示覆盖和调用期望的方法，显式地选择使用哪种默认方法的实现